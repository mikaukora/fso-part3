{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","onSubmit","nameValue","nameChange","numberValue","numberChange","type","Persons","persons","handleDelete","map","person","name","number","onClick","id","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","put","deleteId","delete","Notification","message","Object","keys","length","className","error","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","notification","setNotification","personsToShow","filter","p","toLocaleLowerCase","includes","useEffect","showNotification","msg","setTimeout","event","target","preventDefault","find","e","window","confirm","personToUpdate","updated","catch","alert","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51934246.chunk.js","sourcesContent":["const Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      filter shown with <input value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","const PersonForm = ({\n  onSubmit,\n  nameValue,\n  nameChange,\n  numberValue,\n  numberChange,\n}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={nameValue} onChange={nameChange} />\n      </div>\n      <div>\n        number: <input value={numberValue} onChange={numberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","const Persons = ({ persons, handleDelete }) => {\n  return (\n    <div>\n      {persons.map((person) => (\n        <div key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => handleDelete(person.id)}>delete</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteId = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst personService = {\n  getAll,\n  create,\n  update,\n  deleteId,\n};\n\nexport default personService;\n","const Notification = ({ message }) => {\n  if (Object.keys(message).length === 0 || message.message === \"\") {\n    return null;\n  }\n\n  return (\n    <div className={message.error ? \"error\" : \"info\"}>{message.message}</div>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [notification, setNotification] = useState({});\n\n  const personsToShow = persons.filter((p) =>\n    p.name.toLocaleLowerCase().includes(nameFilter)\n  );\n\n  useEffect(() => {\n    personService.getAll().then((response) => setPersons(response));\n  }, []);\n\n  const addName = (event) => {\n    event.preventDefault();\n\n    if (persons.find((e) => e.name === newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const personToUpdate = persons.find((e) => e.name === newName);\n        const updated = { ...personToUpdate, number: newNumber };\n\n        personService\n          .update(updated.id, updated)\n          .then(() => {\n            setPersons(persons.map((e) => (e.id === updated.id ? updated : e)));\n            setNewName(\"\");\n            setNewNumber(\"\");\n            showNotification(`${personToUpdate.name} updated`);\n          })\n          .catch((error) => {\n            setNewName(\"\");\n            setNewNumber(\"\");\n            setPersons(persons.filter((e) => e.id !== personToUpdate.id));\n            showNotification(\n              `Information of ${personToUpdate.name} has already been removed from server`,\n              true\n            );\n          });\n      }\n    } else if (persons.find((e) => e.number === newNumber)) {\n      alert(`${newNumber} is already added to phonebook`);\n    } else {\n      const person = { name: newName, number: newNumber };\n\n      personService.create(person).then((response) => {\n        setPersons(persons.concat(response));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        showNotification(`${person.name} added`);\n      });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setNameFilter(event.target.value);\n  };\n\n  const handlePersonDelete = (id) => {\n    const person = persons.find((e) => e.id === id);\n    if (window.confirm(`Delete ${person.name}?`)) {\n      showNotification(`${person.name} deleted`);\n      personService\n        .deleteId(person.id)\n        .then(setPersons(persons.filter((e) => e.id !== person.id)))\n        .catch((error) => console.log(error));\n    }\n  };\n\n  const showNotification = (msg, error = false) => {\n    setNotification({ message: msg, error: error });\n    setTimeout(() => {\n      setNotification({});\n    }, 5000);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter value={nameFilter} onChange={handleFilterChange}></Filter>\n      <h3>add a new</h3>\n      <PersonForm\n        onSubmit={addName}\n        nameValue={newName}\n        nameChange={handleNameChange}\n        numberValue={newNumber}\n        numberChange={handleNumberChange}\n      ></PersonForm>\n      <h3>Numbers</h3>\n      <Persons\n        persons={personsToShow}\n        handleDelete={handlePersonDelete}\n      ></Persons>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}